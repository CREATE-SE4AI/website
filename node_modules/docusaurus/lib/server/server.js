var _jsxFileName='website/server/server.js';require('babel-register');
var express=require('express');
var React=require('react');
var renderToString=require('react-dom/server').renderToString;
var fs=require('fs');
var os=require('os');
var DocsPost=require('../core/DocsPost.js');
var path=require('path');
var readMetadata=require('./readMetadata.js');
var toSlug=require('../core/toSlug.js');
var siteConfig=require('../siteConfig.js');
var readCategories=require('./readCategories.js');

console.log('server.js triggered...');

var port=3000;


var TABLE_OF_CONTENTS_TOKEN='<AUTOGENERATED_TABLE_OF_CONTENTS>';

var insertTableOfContents=function insertTableOfContents(rawContent){
var regexp=/\n###\s+(`.*`.*)\n/g;
var match=void 0;
var headers=[];
while(match=regexp.exec(rawContent)){
headers.push(match[1]);
}

var tableOfContents=headers.
map(function(header){return'  - ['+header+'](#'+toSlug(header)+')';}).
join('\n');

return rawContent.replace(TABLE_OF_CONTENTS_TOKEN,tableOfContents);
};


readMetadata.generateAll();
var Metadata=require('../core/metadata.js');
var links={};
for(var i=0;i<Metadata.length;i++){
var metadata=Metadata[i];
links[metadata.permalink]=metadata.language+'/'+metadata.source;
}
console.log(links);

readCategories('docs');

var app=express().
get('*.html',function(req,res,next){
console.log(req.path);


var file=links[req.path.toString().replace(siteConfig.baseUrl,'')];
file='docs/'+file;

var result=readMetadata.processMetadata(file);

var language='en';
var metadata=result.metadata;
var rawContent=result.rawContent;

if(rawContent&&rawContent.indexOf(TABLE_OF_CONTENTS_TOKEN)!==-1){
rawContent=insertTableOfContents(rawContent);
}

var docComp=React.createElement(DocsPost,{config:siteConfig,metadata:metadata,language:language,content:rawContent,__source:{fileName:_jsxFileName,lineNumber:66}});

res.send(renderToString(docComp));
});

app.use(express.static('website/src'));

app.listen(port);