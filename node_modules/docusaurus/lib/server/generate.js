var _jsxFileName='website/server/generate.js';require('babel-register');
var fs=require('fs-extra');
var rmdir=require('rmdir');
var readMetadata=require('./readMetadata.js');
var renderToStaticMarkup=require('react-dom/server').renderToStaticMarkup;
var path=require('path');
var toSlug=require('../core/toSlug.js');
var React=require('react');
var siteConfig=require('../siteConfig.js');
var mkdirp=require('mkdirp');
var glob=require('glob');
var languages=require('../languages.js');

console.log('generate.js triggered...');

function writeFileAndCreateFolder(file,content){
mkdirp.sync(file.replace(new RegExp('/[^/]*$'),''));

fs.writeFileSync(file,content);
}

var TABLE_OF_CONTENTS_TOKEN='<AUTOGENERATED_TABLE_OF_CONTENTS>';

var insertTableOfContents=function insertTableOfContents(rawContent){
var regexp=/\n###\s+(`.*`.*)\n/g;
var match=void 0;
var headers=[];
while(match=regexp.exec(rawContent)){
headers.push(match[1]);
}

var tableOfContents=headers.
map(function(header){return'  - ['+header+'](#'+toSlug(header)+')';}).
join('\n');

return rawContent.replace(TABLE_OF_CONTENTS_TOKEN,tableOfContents);
};

var regexSubFolder=/docs\/(.*)\/.*/;

var enabledLanguages=[];
languages.filter(function(lang){return lang.enabled;}).map(function(lang){
enabledLanguages.push(lang.tag);
});

readMetadata.generateAll();

var readCategories=require('./readCategories.js');
readCategories('docs');

var DocsPost=require('../core/DocsPost.js');

fs.removeSync('./build1');


var files=glob.sync('./docs/**');
files.forEach(function(file){
console.log(file);
var language='en';
var match=regexSubFolder.exec(file);
if(match){
language=match[1];
}

if(enabledLanguages.indexOf(language)===-1){
return;
}

var extension=path.extname(file);

if(extension==='.md'||extension==='.markdown'){
var result=readMetadata.processMetadata(file);

var metadata=result.metadata;
var rawContent=result.rawContent;

if(rawContent&&rawContent.indexOf(TABLE_OF_CONTENTS_TOKEN)!=-1){
rawContent=insertTableOfContents(rawContent);
}

var docComp=React.createElement(DocsPost,{config:siteConfig,metadata:metadata,language:language,content:rawContent,__source:{fileName:_jsxFileName,lineNumber:81}});
var str=renderToStaticMarkup(docComp);

writeFileAndCreateFolder('./build1/test-app/'+metadata.permalink,str);
}
});

files=glob.sync('./website/src/test-app/**');
files.forEach(function(file){
var targetFile=file.replace('./website/src/','./build/');
if(file.match(/\.js$/)){
targetFile=targetFile.replace(/\.js$/,'.html');
var ReactComp=require(file.replace('./website/','../'));
var str=renderToStaticMarkup(React.createElement(ReactComp,{__source:{fileName:_jsxFileName,lineNumber:94}}));
writeFileAndCreateFolder(targetFile,str);
}else
if(!fs.lstatSync(file).isDirectory()){

mkdirp.sync(targetFile.replace(new RegExp('/[^/]*$'),''));
fs.copySync(file,targetFile);
}
});